{"ast":null,"code":"var _jsxFileName = \"/Users/kavya/Documents/kruthi/react/third-version/src/components/ShopCustomerComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ShopCustomerService from '../service/ShopCustomerService';\nimport CustomerService from '../service/CustomerService';\nconst SHOPID = 1;\n\nclass ShopCustomerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      customerId: -1,\n      customerName: '',\n      customerEmail: '',\n      balance: 0\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    ShopCustomerService.retrieveShopCustomer(SHOPID, this.state.id).then(response => this.setState({\n      customerId: response.data.customer.id,\n      customerName: response.data.customer.name,\n      customerEmail: response.data.customer.email,\n      balance: response.data.balance\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n    return errors;\n  }\n\n  onSubmit(values) {\n    console.log(values);\n    let shopId = SHOPID;\n    let customerId = values.customerId;\n    let customerEmail = values.customerEmail;\n    let shopCustomer = {\n      balance: values.balance\n    };\n\n    if (this.state.id == -1) {\n      CustomerService.retrieveCustomerByEmail(customerEmail).then(response => ShopCustomerService.addShopCustomer(shopId, response.data.id, shopCustomer).then(() => this.props.history.push('/shopCustomers')));\n    } else {\n      ShopCustomerService.updateShopCustomer(shopId, customerId, shopCustomer).then(() => this.props.history.push('/shopCustomers'));\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let _this$state = this.state,\n        id = _this$state.id,\n        customerId = _this$state.customerId,\n        customerName = _this$state.customerName,\n        customerEmail = _this$state.customerEmail,\n        balance = _this$state.balance;\n    let isCreating = id == -1;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Shop Customer\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        id,\n        customerId,\n        customerName,\n        customerEmail,\n        balance\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      hidden: isCreating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Customer ID\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"int\",\n      name: \"customerId\",\n      hidden: isCreating,\n      disabled: !isCreating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      hidden: isCreating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Customer name\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      hidden: isCreating,\n      name: \"customerName\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Customer email\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"customerEmail\",\n      disabled: !isCreating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Balance\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"int\",\n      name: \"balance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default ShopCustomerComponent;","map":{"version":3,"sources":["/Users/kavya/Documents/kruthi/react/third-version/src/components/ShopCustomerComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","ShopCustomerService","CustomerService","SHOPID","ShopCustomerComponent","constructor","props","state","id","match","params","customerId","customerName","customerEmail","balance","onSubmit","bind","validate","componentDidMount","console","log","retrieveShopCustomer","then","response","setState","data","customer","name","email","values","errors","shopId","shopCustomer","retrieveCustomerByEmail","addShopCustomer","history","push","updateShopCustomer","render","isCreating"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ShopCustomerService from '../service/ShopCustomerService';\nimport CustomerService from '../service/CustomerService';\n\nconst SHOPID = 1\n\nclass ShopCustomerComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            customerId: -1,\n            customerName: '',\n            customerEmail: '',\n            balance: 0\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        ShopCustomerService.retrieveShopCustomer(SHOPID, this.state.id)\n            .then(response => this.setState({\n                customerId: response.data.customer.id,\n                customerName: response.data.customer.name,\n                customerEmail: response.data.customer.email,\n                balance: response.data.balance\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        console.log(values);\n        let shopId = SHOPID\n\n        let customerId = values.customerId\n        let customerEmail = values.customerEmail\n\n        let shopCustomer = {\n            balance: values.balance,\n        }\n\n        if (this.state.id == -1) {\n            CustomerService.retrieveCustomerByEmail(customerEmail).then(\n                (response => \n                    ShopCustomerService.addShopCustomer(shopId, response.data.id, shopCustomer)\n                        .then(() => this.props.history.push('/shopCustomers'))\n                )\n            )\n        } else {\n            ShopCustomerService.updateShopCustomer(shopId, customerId, shopCustomer)\n                .then(() => this.props.history.push('/shopCustomers'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { id, customerId, customerName, customerEmail, balance} = this.state\n        let isCreating = (id == -1)\n        return (\n            <div>\n                <h3>Shop Customer</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, customerId, customerName, customerEmail, balance }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label hidden = {isCreating}>Customer ID</label>\n                                        <Field className=\"form-control\" type=\"int\" name=\"customerId\" hidden = {isCreating} disabled = {!isCreating} />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label hidden={isCreating}>Customer name</label>\n                                        <Field className=\"form-control\" type=\"text\" hidden={isCreating} name=\"customerName\"  disabled />\n                                    </fieldset>\n                                    <ErrorMessage name=\"email\" component=\"div\"\n                                        className=\"alert alert-danger\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Customer email</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"customerEmail\"  disabled = {!isCreating} />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Balance</label>\n                                        <Field className=\"form-control\" type=\"int\" name=\"balance\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ShopCustomerComponent"]},"metadata":{},"sourceType":"module"}