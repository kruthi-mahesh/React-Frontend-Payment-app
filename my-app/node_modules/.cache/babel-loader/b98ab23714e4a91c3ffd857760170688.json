{"ast":null,"code":"var _jsxFileName = \"/Users/kavya/Documents/kruthi/react/my-app/src/components/ShopCustomerComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ShopCustomerService from '../service/ShopCustomerService';\nconst SHOPID = 1;\n\nclass ShopCustomerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // id: this.props.match.params.id,\n      customerId: -1,\n      balance: 0\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.customerId == -1) {\n      return;\n    }\n\n    ShopCustomerService.retrieveCustomer(SHOPID, this.state.customerId).then(response => this.setState({\n      balance: response.data.balance\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.balance) {\n      errors.description = 'Enter a balance amount';\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let shopId = SHOPID;\n    let customerId = values.customerId;\n    let shopCustomer = {\n      balance: values.balance\n    };\n\n    if (this.state.customerId === -1) {\n      ShopCustomerService.addCustomer(shopId, customerId, shopCustomer).then(() => this.props.history.push('/shopCustomers'));\n    } else {\n      ShopCustomerService.updateCustomer(shopId, customerId, shopCustomer).then(() => this.props.history.push('/shopCustomers'));\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let _this$state = this.state,\n        customerId = _this$state.customerId,\n        balance = _this$state.balance;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Shop Customer\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        customerId,\n        balance\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Customer ID\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"int\",\n      name: \"customerId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Balance\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"int\",\n      name: \"balance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default ShopCustomerComponent;","map":{"version":3,"sources":["/Users/kavya/Documents/kruthi/react/my-app/src/components/ShopCustomerComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","ShopCustomerService","SHOPID","ShopCustomerComponent","constructor","props","state","customerId","balance","onSubmit","bind","validate","componentDidMount","console","log","id","retrieveCustomer","then","response","setState","data","values","errors","description","shopId","shopCustomer","addCustomer","history","push","updateCustomer","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ShopCustomerService from '../service/ShopCustomerService';\n\nconst SHOPID = 1\n\nclass ShopCustomerComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            // id: this.props.match.params.id,\n            customerId: -1,\n            balance: 0\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.customerId == -1) {\n            return\n        }\n\n        ShopCustomerService.retrieveCustomer(SHOPID, this.state.customerId)\n            .then(response => this.setState({\n                balance: response.data.balance\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.balance) {\n            errors.description = 'Enter a balance amount'\n        } \n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let shopId = SHOPID\n\n        let customerId = values.customerId\n\n        let shopCustomer = {\n            balance: values.balance,\n        }\n\n        if (this.state.customerId === -1) {\n            ShopCustomerService.addCustomer(shopId, customerId, shopCustomer)\n                .then(() => this.props.history.push('/shopCustomers'))\n        } else {\n            ShopCustomerService.updateCustomer(shopId, customerId, shopCustomer)\n                .then(() => this.props.history.push('/shopCustomers'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { customerId, balance} = this.state\n\n        return (\n            <div>\n                <h3>Shop Customer</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ customerId, balance }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    {/* <fieldset className=\"form-group\">\n                                        <label>CustomerId</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" />\n                                    </fieldset> */}\n                                    <fieldset className=\"form-group\">\n                                        <label>Customer ID</label>\n                                        <Field className=\"form-control\" type=\"int\" name=\"customerId\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Balance</label>\n                                        <Field className=\"form-control\" type=\"int\" name=\"balance\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ShopCustomerComponent"]},"metadata":{},"sourceType":"module"}